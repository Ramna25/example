pipeline {
    agent any

    stages {
        stage('Monitor Other Repositories') {
            steps {
                script {
                    // Define a list of repositories and their branches to monitor
                    def repositories = [
                        [url: 'https://github.com/Ramna25/example.git', branch: 'main'],
                        [url: 'https://github.com/Ramna25/RestAssured-Workshop.git', branch: 'feature']
                    ]
                    
                    for (repo in repositories) {
                        def repoUrl = repo.url
                        def repoBranch = repo.branch

                        // Clone the repository and check for changes in the specified branch
                        try {
                            sh "git clone ${repoUrl} temp-repo"
                            sh "cd temp-repo && git checkout ${repoBranch} && git pull"
                            def hasChanges = sh(script: 'cd temp-repo && git diff --quiet HEAD~ HEAD', returnStatus: true)
                            
                            if (hasChanges == 0) {
                                echo "Changes detected in branch ${repoBranch} of repository ${repoUrl}"
                                // Trigger additional actions or jobs as needed
                            } else {
                                echo "No changes detected in branch ${repoBranch} of repository ${repoUrl}"
                            }
                        } catch (Exception ex) {
                            echo "Error checking repository: ${ex}"
                        } finally {
                            sh "rm -rf temp-repo"
                        }
                    }
                }
            }
        }
