pipeline {
 agent any


  environment {
   // DOCKERHUB_CREDENTIALS = credentials('dockerhub') for ahs** public access
   DOCKERHUB_CREDENTIALS = credentials('dockerorg')
   gitCredentials = credentials('GitHub')
   

  
}

    parameters {
        string(defaultValue: "", description: 'get branch name', name: 'branchname')
        string(defaultValue: "", description: 'get repo name', name: 'reponame')
        string(defaultValue: "", description: 'get gir url', name: 'gitrepo')
        string(defaultValue: "", description: 'get tag name', name: 'tag')
    }

    stages {
     
        stage('Get Branch name'){
            steps{
                echo "You choose branch: ${params.branchname}"
                echo "You choose repo : ${params.reponame}"
                echo "You choose git : ${params.gitrepo}"
                echo "You choose git : ${params.tag}"


            }
        }
        stage('Clone the repo ') {
              // Clones the repository from the current branch name

            steps{
            echo 'Make the output directory'

            // our build source will be available here
            sh 'mkdir -p build'


            dir('build') {
                // git branch: "${params.branchname}" , credentialsId: 'GitHub'	 , url: "${params.gitrepo}"
                   git branch: "refs/tags/*${params.branchname}" , credentialsId: 'GitHub'	 , url: "${params.gitrepo}"
             //refs/tags/v3.0
                //git branch: 'refs/tags/v9' , credentialsId: 'GitHub'	 , url: "${params.gitrepo}"
                //checkout([$class: 'GitSCM', branches: [[name: "refs/tags/sandbox"]], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'SubmoduleOption', disableSubmodules: false, parentCredentials: false, recursiveSubmodules: false, reference: '', trackingSubmodules: false]], submoduleCfg: [], userRemoteConfigs: [[credentialsId: "gitlab-ssh-user", url: "git@192.168.44.132:xxxx/xxxxx.git"]]])

                //
              }     
          }  
          }

        stage('Move into the cloned directory'){
          steps
          {
            sh '''
                  cd /var/jenkins_home/jobs/sandboxserver/workspace/build
                  ls
                '''

          }
        
    }
        stage('Delete cloned directory'){
          steps
          {
            sh '''
                  rm -rf /var/jenkins_home/jobs/sandboxserver/workspace/build
                  ls
                '''

          }
        
    }
     
